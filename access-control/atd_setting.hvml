#!/usr/bin/purc

<!DOCTYPE hvml>
<hvml target="html" lang="{{ $REQ.lang || $STR.substr($SYS.locale, 0, 2) }}" silently >
    <head>
        <base href=$CRTN.base(! "file://$SYS.cwd" ) hvml:silently />
        <link rel="stylesheet" href="exported/assets/css/main.css" />
        <link rel="stylesheet" href="exported/assets/css/block_list.css" />
        
        <update on="$TIMERS" to="unite">
            [
                { "id" : "clock", "interval" : 500, "active" : "yes" },
            ]
        </update>
    </head>
    
    <body>
        
        <init as 'items' with [ "部门管理", "人员管理", "认证设置", "系统设置"] />
        <init as 'bkimgs' with [ "partmt.png", "mbmt.png", "certmt.png", "setmt.png"] />
        <div id="main_pane">
            <img id="go-back" class="left_img" src="exported/assets/icon/go-back.png" width="40" height="40" hvml-events="click" />
            <div id="title_h1">配置菜单</div>
            <div id="list_content">
                <iterate on [ 0, 1, 2, 3 ] >
                    <div id="item-$?" class="blockitem" hvml-events="click" >
                        <img src="exported/assets/icon/$bkimgs[$?]" width="80" height="80" />
                        <p>$items[$?]</p>
                    </div>
                </iterate>
            </div>
        </div>
        
        
        <observe on="#go-back" for="click">
            <exit />
        </observe>
        
        <observe on=".blockitem" for="click">
            <load from "$?.targetId.hvml" onto 'self:' with {
                _renderer:{
                    keepContents:{
                        forSuppressing:{
                            outTransitionStyle:"window-transition-move: linear 200",
                            outTransitionDirection:"right",
                            inTransitionStyle:"window-transition-move: linear 200",
                            inTransitionDirection:"left",
                        },
                        forExposing:{
                            outTransitionStyle:"window-transition-move: linear 200",
                            outTransitionDirection:"left",
                            inTransitionStyle:"window-transition-move: linear 200",
                            inTransitionDirection:"right",
                        }
                    }
                }
            } async />
        </observe>
        
        <observe on $CRTN for "rdrState:closed">
            <exit with "closed" />
        </observe>

    </body>
</hvml>
