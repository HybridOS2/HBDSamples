#!/usr/bin/purc

<!DOCTYPE hvml>
<hvml target="html" lang="{{ $REQ.lang || $STR.substr($SYS.locale, 0, 2) }}" silently >
    <head>
        <base href=$CRTN.base(! "file://$SYS.cwd" ) hvml:silently />
        <link rel="stylesheet" href="exported/assets/css/main.css" />
        
        <update on="$TIMERS" to="unite">
            [
                { "id" : "clock", "interval" : 500, "active" : "yes" },
            ]
        </update>
        <style hvml:raw>
        </style>
    </head>
    
    
    
    <body>
        <init as 'weeks' with [ "星期日", "星期一","星期二","星期三","星期四","星期五","星期六"] />
        
        <archetype name="pwd_piece">
            <p>请输入用户名密码:</p>
            <p>
                <label>用户名:</label>
                <input type="text" value="admin"/>
            </p>
            <p>
                <label>密&nbsp;&nbsp;&nbsp;&nbsp;码:</label>
                <input type="password" value="password"/>
            </p>
        </archetype>
        
        <archetype name="cert_piece">
            <div id="cert_ok">
                <img src="exported/assets/icon/link.png" width="70" height="70"/>
            </div>
        </archetype>
        
        <div id="main_pane">
            <div id="day">
                <p><span id="clock">$DATETIME.fmttime("%m月%e日 ")</span>
                    <span id="week">$weeks[$DATETIME.localtime().wday]</span>
                </p>
                <p id="curr_time">
                    $DATETIME.fmttime("%H:%M")
                </p>
            </div>
            <div id="right-btn">
                <p>
                    <img id="user" src="exported/assets/icon/user.png" width="60" height="60" hvml-events="click" />
                </p>
                <p>
                    <img id="setting" src="exported/assets/icon/setting.png" width="60" height="60" hvml-events="click" />
                </p>
            </div>
            
            <div id="center_pane">
            </div>
            
        </div>
        
        <observe on="#setting" for="click" >
            <load from 'atd_cert.hvml' onto 'self:' as 'managerCert' async>
            {
                is_user: 0,
            }
            </load>
             <observe on $managerCert for="corState:exited">
                <forget on $managerCert for "corState:exited" />
                <test on $?>
                    <match with "$L.eq($?, 0)" exclusively>
                        <inherit>
                            $STREAM.stdout.writelines("Manager auth  exited with auth failed")
                        </inherit>
                    </match>
                    <match with "$L.eq($?, 1)" exclusively>
                        <inherit>
                            $STREAM.stdout.writelines("Manager auth exited with auth success goto atd_setting.hvml")
                        </inherit>
                        <load from 'atd_setting.hvml' onto 'self:' with {
                            _renderer:{
                                keepContents:{
                                    forSuppressing:{
                                        outTransitionStyle:"window-transition-move:  linear 300",
                                        outTransitionDirection:"right",
                                        inTransitionStyle:"window-transition-move: none",
                                    },
                                    forExposing:{
                                        outTransitionStyle:"window-transition-move: none",
                                        inTransitionStyle:"window-transition-move: linear 300",
                                        inTransitionDirection:"right",
                                    }
                                }
                            }
                        } async />
                    </match>
                    <match with "$L.eq($?, 2)" exclusively>
                        <inherit>
                            $STREAM.stdout.writelines("Manager auth exited without auth")
                        </inherit>
                    </match>
                </test>
             </observe>
        </observe>

        <observe on="#user" for="click">
            <load from 'atd_cert.hvml' onto 'self:' as 'userCert' async>
            {
                is_user: 1,
            }
            </load>
             <observe on $userCert for="corState:exited">
                <forget on $userCert for "corState:exited" />
                <test on $?>
                    <match with "$L.eq($?, 0)" exclusively>
                        <inherit>
                            $STREAM.stdout.writelines("User auth  exited with auth failed")
                        </inherit>
                    </match>
                    <match with "$L.eq($?, 1)" exclusively>
                        <inherit>
                            $STREAM.stdout.writelines("User auth exited with auth success pop message")
                        </inherit>
                    </match>
                    <match with "$L.eq($?, 2)" exclusively>
                        <inherit>
                            $STREAM.stdout.writelines("User auth exited without auth")
                        </inherit>
                    </match>
                </test>
             </observe>
        </observe>


        <observe on="#lock" for="click">
            <update on "#center_pane" at "content" with $cert_piece /> 
        </observe>

        <observe on $TIMERS for "expired:clock">
            <update on "#clock" at "textContent" to "displace" with "$DATETIME.fmttime('%m月%e日 ')" />
            <update on "#week" at "textContent" to "displace" with "$weeks[$DATETIME.localtime().wday]" />
            <update on "#curr_time" at "textContent" to "displace" with "$DATETIME.fmttime('%H:%M')" />
        </observe>
        
        <observe on $CRTN for "rdrState:closed">
            <exit with "closed" />
        </observe>

    </body>
</hvml>
