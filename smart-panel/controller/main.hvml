<define as 'post_event_to_lockscreen' at="_topmost">
    <request on="/-/lockscreen/CHAN/chanLockscreen" to="post" with=$? />
</define>

<define as 'on_lockscreen_state_event' at="_topmost">
    <inherit>
        $STREAM.stdout.writelines("on_lockscreen_state_event: $?")
    </inherit>
    <test on $?.name>
        <match for "AS 'lock'" exclusively>
            <request on '#mainContent' to="call:stop_lockscreen_timer()" noreturn />
        </match>
        <match for "AS 'unlock'" exclusively>
            <request on '#mainContent' to="call:start_lockscreen_timer()" noreturn />
        </match>
        <match for "AS 'autoSwitchThemeLight'" exclusively>
            <request on '.switch-theme-to-light' to 'call:ELEMENT.classList.add("active")' noreturn />
            <request on '.switch-theme-to-dark' to 'call:ELEMENT.classList.remove("active")' noreturn />
            <update on '#theMainBody' at 'attr.data-bs-theme' with 'light' />
        </match>
        <match for "AS 'autoSwitchThemeDark'" exclusively>
            <request on '.switch-theme-to-light' to 'call:ELEMENT.classList.remove("active")' noreturn />
            <request on '.switch-theme-to-dark' to 'call:ELEMENT.classList.add("active")' noreturn />
            <update on '#theMainBody' at 'attr.data-bs-theme' with 'dark' />
        </match>

        <match for="ANY">
        </match>
    </test>
</define>

<define as 'on_music_player_event' at="_topmost">
    <inherit>
        $STREAM.stdout.writelines("on_lockscreen_state_event: $?")
    </inherit>
    <test on $?.name>
        <match for "AS 'play'" exclusively>
        </match>
        <match for "AS 'pause'" exclusively>
        </match>

        <match for="ANY">
        </match>
    </test>
</define>

<observe on $chIn for 'receivable'>
    <choose on $chIn.recv() silently>
        <test on $?.type>
            <match for "AS 'lockscreenState'" exclusively>
                <include with $on_lockscreen_state_event on $3? />
            </match>

            <match for "AS 'musicPlayer'" exclusively>
                <include with $on_music_player_event on $3? />
            </match>

            <match for "AS 'network'" exclusively>
            </match>

            <match for="ANY">
            </match>
        </test>
    </choose>
</observe>

<observe on '#mainContent' for 'locked'>
    <include with $post_event_to_lockscreen on {'type':'lockscreen', 'name':'lock'} />
</observe>

<observe on '.time-to-lock-screen' for 'click'>
    <choose on $DOC.query("#mainContent").attr('data-time-to-lock') >
        <test with $L.ne($?, $2?.originValue) >
            <inherit>
                $STREAM.stdout.writelines("Changing time-to-lock to $3?.originValue $3?.originId")
            </inherit>

            <update on '#mainContent' at 'attr.data-time-to-lock' with "$3?.originValue" />
            <request on "#theTimeToLock{$?} span" to 'call:ELEMENT.classList.add(ARG)' with 'd-none' noreturn />
            <request on "#$3?.originId span" to 'call:ELEMENT.classList.remove(ARG)' with 'd-none' noreturn />
        </test>
    </choose>

</observe>

<observe on '#mainContent' for 'load'>
    <include with $post_event_to_lockscreen on {'type':'lockscreen', 'name':'enableUnlock'} />
</observe>

<observe on '.switch-theme-to-dark' for 'click'>
    <include with $post_event_to_lockscreen on {'type':'lockscreen', 'name':'themeToDark'} />
</observe>

<observe on '.switch-theme-to-light' for 'click'>
    <include with $post_event_to_lockscreen on {'type':'lockscreen', 'name':'themeToLight'} />
</observe>
